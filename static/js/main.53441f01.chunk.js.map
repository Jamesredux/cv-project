{"version":3,"sources":["components/personal/PersonalDisplay.js","components/personal/PersonalForm.js","components/personal/Personal.js","components/summary/SummaryForm.js","components/summary/SummaryDisplay.js","components/summary/Summary.js","components/education/EducationForm.js","components/education/EducationDisplay.js","components/education/Education.js","components/experience/ExperienceForm.js","components/experience/ExperienceDisplay.js","components/experience/Experience.js","components/skills/SkillsForm.js","components/skills/SkillsDisplay.js","components/skills/Skills.js","App.js","index.js"],"names":["PersonalDisplay","props","editInfo","bind","showForm","this","editData","document","getElementById","style","width","marginLeft","data","name","address","telephone","website","email","className","id","href","target","rel","onClick","Component","PersonalForm","state","handleChange","handleSubmit","hideForm","prevProps","edit","setState","editDone","e","value","preventDefault","submitForm","onSubmit","type","required","onChange","htmlFor","Personal","cancelEdit","formData","SummaryForm","text","cols","rows","maxLength","SummaryDisplay","Summary","displayState","EducationForm","uniqid","institution","from","until","qualifications","editActive","selectedRecord","EducationDisplay","deleteRecord","editRecord","window","confirm","removeRecord","dataset","requestEdit","listItems","map","item","key","data-id","pointerEvents","Education","records","addRecord","find","record","prevState","newRecord","filteredArray","filter","ExperienceForm","employer","duty","duties","addDuty","deleteDuty","editDuty","selectedJob","removeIndex","parseInt","selectId","selectedDuty","index","dutyList","ExperienceDisplay","Experience","push","newJob","SkillsForm","SkillsDisplay","Skills","App","personal","education","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.53441f01.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass PersonalDisplay extends Component {\n  constructor(props) {\n    super(props);\n\n    this.editInfo = this.editInfo.bind(this);\n    this.showForm = this.showForm.bind(this);\n  }\n\n  editInfo() {\n    this.props.editData();\n    this.showForm();\n  }\n\n  showForm() {\n    document.getElementById('personal-form').style.width = '400px';\n    document.getElementById('personal-display').style.marginLeft = '400px';\n  }\n\n  // add website and link to it\n  render() {\n    if (this.props.data.name) {\n      const { name, address, telephone, website, email } = this.props.data;\n      return (\n        <div className='display-box' id='personal-display'>\n          <div className='content-div'>\n            <h2>{name}</h2>\n            <p>{address}</p>\n            <p>{telephone}</p>\n            <a\n              href={'https://' + website}\n              target='_blank'\n              rel='noreferrer noopener'\n            >\n              {website}\n            </a>\n            <p>{email}</p>\n            <button className='edit-button' onClick={this.editInfo}>\n              Edit\n            </button>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className='display-box' id='personal-display'>\n          <div className='content-div'>\n            <h2>James Doe</h2>\n            <p>London, England</p>\n            <p>0112 434 543</p>\n            <a\n              href='https://github.com/Jamesredux/'\n              target='_blank'\n              rel='noreferrer noopener'\n            >\n              github.com/Jamesredux\n            </a>\n            <p>jamesdoe@example.com</p>\n            <button className='edit-button' onClick={this.editInfo}>\n              edit\n            </button>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default PersonalDisplay;\n","import React, { Component } from 'react';\n\nclass PersonalForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      address: '',\n      telephone: '',\n      website: '',\n      email: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.hideForm = this.hideForm.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.data.edit) {\n      const { name, address, telephone, website, email } = this.props.data;\n      this.setState({\n        name: name,\n        address: address,\n        telephone: telephone,\n        website: website,\n        email: email,\n      });\n      this.props.editDone();\n    }\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.submitForm(this.state);\n    this.setState({\n      name: '',\n      address: '',\n      telephone: '',\n      website: '',\n      email: '',\n    });\n    this.hideForm();\n  }\n\n  hideForm() {\n    document.getElementById('personal-form').style.width = '0';\n    document.getElementById('personal-display').style.marginLeft = '0';\n  }\n\n  //Personal statement\n  render() {\n    return (\n      <div className='pers-form form-box' id='personal-form'>\n        <div className='title'>\n          <h2>Personal Information</h2>\n          <div className='close-box' onClick={this.hideForm}>\n            X\n          </div>\n        </div>\n\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-section'>\n            <label>Name:</label>\n            <input\n              type='text'\n              required\n              name='name'\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='form-section'>\n            <label>Location:</label>\n            <input\n              type='text'\n              name='address'\n              value={this.state.address}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='form-section'>\n            <label>Telephone:</label>\n            <input\n              type='tel'\n              required\n              name='telephone'\n              value={this.state.telephone}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className='form-section'>\n            <label>Website:</label>\n            <input\n              type='text'\n              name='website'\n              value={this.state.website}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className='form-section'>\n            <label htmlFor=''>Email:</label>\n            <input\n              type='email'\n              required\n              name='email'\n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='form-section'>\n            <label htmlFor=''></label>\n            <button type='submit'>submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PersonalForm;\n","import React, { Component } from 'react';\nimport PersonalDisplay from './PersonalDisplay';\nimport PersonalForm from './PersonalForm';\n\nclass Personal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      address: '',\n      telephone: '',\n      email: '',\n      website: '',\n      edit: false,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n    this.editData = this.editData.bind(this);\n  }\n\n  editData() {\n    this.setState({ edit: true });\n  }\n\n  cancelEdit() {\n    this.setState({\n      edit: false,\n    });\n  }\n\n  handleSubmit(formData) {\n    const { name, address, telephone, website, email } = formData;\n    this.setState({\n      name: name,\n      address: address,\n      telephone: telephone,\n      website: website,\n      email: email,\n    });\n  }\n\n  render() {\n    return (\n      <div className='personal'>\n        <PersonalForm\n          submitForm={this.handleSubmit}\n          data={this.state}\n          editDone={this.cancelEdit}\n        />\n        <PersonalDisplay data={this.state} editData={this.editData} />\n      </div>\n    );\n  }\n}\n\nexport default Personal;\n","import React, { Component } from 'react';\n\nclass SummaryForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      text: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.hideForm = this.hideForm.bind(this);\n  }\n\n  hideForm() {\n    document.getElementById('summary-form').style.width = '0';\n    document.getElementById('summary-display').style.marginLeft = '0';\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.data.edit) {\n      this.setState({\n        text: this.props.data.text,\n      });\n      this.props.editDone();\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.submitForm(this.state);\n    this.setState({\n      text: '',\n    });\n    this.hideForm();\n  }\n\n  render() {\n    return (\n      <div className=' form-box' id='summary-form'>\n        <div className='title'>\n          <h2>Summary</h2>\n          <div className='close-box' onClick={this.hideForm}>\n            X\n          </div>\n        </div>\n\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-section'>\n            <label>Summary:</label>\n            <textarea\n              name='text'\n              cols='30'\n              rows='4'\n              maxLength='5000'\n              value={this.state.text}\n              onChange={this.handleChange}\n            ></textarea>\n          </div>\n\n          <div className='form-section'>\n            <label htmlFor=''></label>\n            <button type='submit'>submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SummaryForm;\n","import React, { Component } from 'react';\n\nclass SummaryDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.editInfo = this.editInfo.bind(this);\n    this.showForm = this.showForm.bind(this);\n  }\n\n  showForm() {\n    document.getElementById('summary-form').style.width = '400px';\n    document.getElementById('summary-display').style.marginLeft = '400px';\n  }\n  editInfo() {\n    this.showForm();\n    this.props.editInfo(this.props);\n  }\n\n  render() {\n    return (\n      <div className='display-box' id='summary-display'>\n        <div className='content-div'>\n          <h2>Summary</h2>\n          <p>{this.props.data.text}</p>\n          <button className='edit-button' onClick={this.editInfo}>\n            edit\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SummaryDisplay;\n","import React, { Component } from 'react';\nimport SummaryForm from './SummaryForm';\nimport SummaryDisplay from './SummaryDisplay';\n\nclass Summary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      text:\n        'Write your summary here eg: ...Web developer with 2 years experience passionate about building and optimizing inovative web apps. I have substantial experience of testing, de-bugging and leading teams.',\n      edit: false,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.editInfo = this.editInfo.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n  }\n\n  handleSubmit(formData) {\n    this.setState({\n      text: formData.text,\n    });\n  }\n\n  editInfo(displayState) {\n    this.setState({\n      edit: true,\n    });\n  }\n\n  cancelEdit() {\n    this.setState({\n      edit: false,\n    });\n  }\n\n  render() {\n    return (\n      <div className='summary-container'>\n        <SummaryForm\n          submitForm={this.handleSubmit}\n          data={this.state}\n          editDone={this.cancelEdit}\n        />\n        <SummaryDisplay data={this.state} editInfo={this.editInfo} />\n      </div>\n    );\n  }\n}\n\nexport default Summary;\n","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\n\nclass EducationForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: uniqid(),\n      institution: '',\n      from: '',\n      until: '',\n      qualifications: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.hideForm = this.hideForm.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.editData.editActive) {\n      const {\n        id,\n        institution,\n        from,\n        until,\n        qualifications,\n      } = this.props.editData.selectedRecord;\n      this.setState({\n        id: id,\n        institution: institution,\n        from: from,\n        until: until,\n        qualifications: qualifications,\n      });\n      this.props.editDone();\n    }\n  }\n\n  hideForm() {\n    document.getElementById('education-form').style.width = '0';\n    document.getElementById('education-display').style.marginLeft = '0';\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.submitForm(this.state);\n    this.setState({\n      id: uniqid(),\n      institution: '',\n      from: '',\n      until: '',\n      qualifications: '',\n    });\n  }\n\n  populateEditForm() {}\n\n  render() {\n    return (\n      <div className='edu-form form-box' id='education-form'>\n        <div className='title'>\n          <h2>Education</h2>\n          <div className='close-box' onClick={this.hideForm}>\n            X\n          </div>\n        </div>\n\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-section'>\n            <label>Institution Attended:</label>\n            <input\n              type='text'\n              required\n              name='institution'\n              value={this.state.institution}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='form-section '>\n            <label>Dates Attended</label>\n          </div>\n          <div className='form-section'>\n            <label>From:</label>\n            <input\n              type='text'\n              name='from'\n              value={this.state.from}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='form-section'>\n            <label>Until:</label>\n            <input\n              type='text'\n              name='until'\n              value={this.state.until}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='form-section'>\n            <label>Qualification Received:</label>\n            <input\n              type='text'\n              name='qualifications'\n              value={this.state.qualifications}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className='form-section'>\n            <label htmlFor=''></label>\n            <button type='submit'>submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EducationForm;\n","import React, { Component } from 'react';\nimport { FaTrashAlt, FaRegEdit } from 'react-icons/fa';\n\nclass EducationDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.editInfo = this.editInfo.bind(this);\n    this.showForm = this.showForm.bind(this);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.editRecord = this.editRecord.bind(this);\n  }\n\n  showForm() {\n    document.getElementById('education-form').style.width = '400px';\n    document.getElementById('education-display').style.marginLeft = '400px';\n  }\n  editInfo() {}\n\n  deleteRecord(e) {\n    let confirmation = window.confirm(\n      'Are you sure you want to delete this record?'\n    );\n\n    if (confirmation) {\n      this.props.removeRecord(e.target.dataset.id);\n    }\n  }\n\n  editRecord(e) {\n    this.props.requestEdit(e.target.dataset.id);\n    this.showForm();\n  }\n\n  render() {\n    const listItems = this.props.data.map((item) => (\n      <div className='display-item' key={item.id}>\n        <div className='display-item-container'>\n          <div className='title'>\n            <h4 className='large-text'>{item.institution}</h4>\n            <p>\n              <span className='bold-text'>Dates Attended:</span> {item.from}\n              {' - '}\n              {item.until}\n            </p>\n          </div>\n          <p>{item.qualifications}</p>\n        </div>\n        <div className='buttons-div'>\n          <div onClick={this.editRecord} data-id={item.id} className='edit-div'>\n            <FaRegEdit pointerEvents='none' />\n          </div>\n          <div onClick={this.deleteRecord} data-id={item.id} className='delete'>\n            <FaTrashAlt pointerEvents='none' />\n          </div>\n        </div>\n      </div>\n    ));\n    return (\n      <div className='display-box' id='education-display'>\n        <div className='content-div'>\n          <h2>Education</h2>\n          <div>{listItems}</div>\n          <button id='add-education' onClick={this.showForm}>\n            Add Education\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EducationDisplay;\n","import React, { Component } from 'react';\nimport EducationForm from './EducationForm';\nimport EducationDisplay from './EducationDisplay';\n\nclass Education extends Component {\n  constructor() {\n    super();\n    this.selectedRecord = {};\n    this.state = {\n      records: [\n        {\n          id: '33',\n          institution: 'Example University',\n          from: '2002',\n          until: '2006',\n          qualifications: 'BA(Hons) Maths and French',\n        },\n        {\n          id: '34',\n          institution: 'Example High School',\n          from: '1995',\n          until: '2002',\n          qualifications: 'A Levels: English (A) Maths (B) Economics (B)',\n        },\n      ],\n      selectedRecord: {},\n      editActive: false,\n    };\n\n    this.addRecord = this.addRecord.bind(this);\n    this.removeRecord = this.removeRecord.bind(this);\n    this.requestEdit = this.requestEdit.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n  }\n\n  addRecord(formData) {\n    const recordToEdit = this.state.records.find(\n      (record) => record.id === formData.id\n    );\n\n    if (recordToEdit) {\n      this.setState((prevState) => ({\n        records: prevState.records.map((record) =>\n          record.id === formData.id ? formData : record\n        ),\n        selectedRecord: {},\n      }));\n    } else {\n      this.setState((prevState) => {\n        return {\n          records: [...prevState.records, formData],\n        };\n      });\n    }\n  }\n\n  requestEdit(id) {\n    const newRecord = this.state.records.find((record) => record.id === id);\n\n    this.setState({\n      selectedRecord: newRecord,\n      editActive: true,\n    });\n  }\n\n  removeRecord(id) {\n    const newArray = [...this.state.records];\n    const filteredArray = newArray.filter((item) => item.id !== id);\n    this.setState({ records: filteredArray });\n  }\n\n  cancelEdit() {\n    this.setState({ editActive: false });\n  }\n\n  render() {\n    return (\n      <div className='multi-container'>\n        <EducationForm\n          submitForm={this.addRecord}\n          editData={this.state}\n          editDone={this.cancelEdit}\n        />\n        <EducationDisplay\n          data={this.state.records}\n          removeRecord={this.removeRecord}\n          requestEdit={this.requestEdit}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Education;\n","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\nimport { CgAddR } from 'react-icons/cg';\nimport { FaTrashAlt, FaRegEdit } from 'react-icons/fa';\n\nclass ExperienceForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: uniqid(),\n      employer: '',\n      from: '',\n      until: '',\n      duty: '',\n      duties: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.hideForm = this.hideForm.bind(this);\n    this.addDuty = this.addDuty.bind(this);\n    this.deleteDuty = this.deleteDuty.bind(this);\n    this.editDuty = this.editDuty.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.editData.editActive) {\n      const {\n        id,\n        employer,\n        from,\n        until,\n        duties,\n      } = this.props.editData.selectedJob;\n      this.setState({\n        id: id,\n        employer: employer,\n        from: from,\n        until: until,\n        duties: duties,\n      });\n      this.props.editDone();\n    }\n  }\n\n  hideForm() {\n    document.getElementById('experience-form').style.width = '0';\n    document.getElementById('experience-display').style.marginLeft = '0';\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  addDuty(e) {\n    if (this.state.duty === '') return;\n    // const newDuty = this.state.duty;\n    this.setState((prevState) => {\n      return {\n        duties: [...prevState.duties, this.state.duty],\n      };\n    });\n    this.setState({ duty: '' });\n  }\n\n  deleteDuty(e) {\n    const removeIndex = parseInt(e.target.dataset.id);\n    this.removeRecord(removeIndex);\n  }\n\n  editDuty(e) {\n    const selectId = parseInt(e.target.dataset.id);\n    const selectedDuty = this.state.duties.filter(\n      (duty, index) => index === selectId\n    );\n    this.setState({ duty: selectedDuty });\n    this.removeRecord(selectId);\n  }\n\n  removeRecord(removeIndex) {\n    this.setState((prevState) => ({\n      duties: prevState.duties.filter((duty, index) => index !== removeIndex),\n    }));\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.submitForm(this.state);\n    this.setState({\n      id: uniqid(),\n      employer: '',\n      from: '',\n      until: '',\n      duty: '',\n      duties: [],\n    });\n  }\n\n  render() {\n    const dutyList = this.state.duties.map((duty, index) => (\n      <div className='duty-item' key={uniqid()}>\n        <li>{duty}</li>\n        <div className='buttons-div'>\n          <div onClick={this.editDuty} data-id={index} className='edit-div'>\n            <FaRegEdit pointerEvents='none' />\n          </div>\n          <div onClick={this.deleteDuty} data-id={index} className='delete'>\n            <FaTrashAlt pointerEvents='none' />\n          </div>\n        </div>\n      </div>\n    ));\n    return (\n      <div className=' form-box' id='experience-form'>\n        <div className='title'>\n          <h2>Experience</h2>\n          <div className='close-box' onClick={this.hideForm}>\n            X\n          </div>\n        </div>\n\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-section'>\n            <label>Employer:</label>\n            <input\n              type='text'\n              required\n              name='employer'\n              value={this.state.employer}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='form-section '>\n            <label>Dates Employed</label>\n          </div>\n          <div className='form-section'>\n            <label>From:</label>\n            <input\n              type='text'\n              name='from'\n              value={this.state.from}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='form-section'>\n            <label>Until:</label>\n            <input\n              type='text'\n              name='until'\n              value={this.state.until}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='form-section'>\n            <h2>Responsibilites and Achievments</h2>\n          </div>\n          <div className='form-section'>\n            <label>Add to create list:</label>\n            <input\n              type='text'\n              name='duty'\n              maxLength='500'\n              value={this.state.duty}\n              onChange={this.handleChange}\n            />\n            <div className='add-record' onClick={this.addDuty}>\n              <CgAddR pointerEvents='none' />\n            </div>\n          </div>\n          <div className='form-section'>\n            <ul className='job-details-list'>{dutyList}</ul>\n          </div>\n          <div className='form-section'>\n            <label htmlFor=''></label>\n            <button type='submit'>submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ExperienceForm;\n","import React, { Component } from 'react';\nimport { FaTrashAlt, FaRegEdit } from 'react-icons/fa';\nimport uniqid from 'uniqid';\n\nclass ExperienceDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.editRecord = this.editRecord.bind(this);\n    this.showForm = this.showForm.bind(this);\n    this.deleteRecord = this.deleteRecord.bind(this);\n  }\n\n  showForm() {\n    document.getElementById('experience-form').style.width = '400px';\n    document.getElementById('experience-display').style.marginLeft = '400px';\n  }\n\n  editRecord(e) {\n    this.props.requestEdit(e.target.dataset.id);\n    this.showForm();\n  }\n\n  deleteRecord(e) {\n    let confirmation = window.confirm(\n      'Are you sure you want to delete this record?'\n    );\n\n    if (confirmation) {\n      this.props.removeRecord(e.target.dataset.id);\n    }\n  }\n\n  render() {\n    const listItems = this.props.data.map((item) => (\n      <div className='display-item' key={item.id}>\n        <div className='display-item-container'>\n          <div className='title'>\n            <h4 className='large-text'>{item.employer}</h4>\n            <p>\n              {item.from}\n              {' - '}\n              {item.until}\n            </p>\n          </div>\n          {item.duties && (\n            <ul>\n              {item.duties.map((duty) => (\n                <li key={uniqid()}>{duty}</li>\n              ))}\n            </ul>\n          )}\n        </div>\n        <div className='buttons-div'>\n          <div onClick={this.editRecord} data-id={item.id} className='edit-div'>\n            <FaRegEdit pointerEvents='none' />\n          </div>\n          <div onClick={this.deleteRecord} data-id={item.id} className='delete'>\n            <FaTrashAlt pointerEvents='none' />\n          </div>\n        </div>\n      </div>\n    ));\n    return (\n      <div className='display-box' id='experience-display'>\n        <div className='content-div'>\n          <h2>Experience</h2>\n          <div>{listItems}</div>\n          <button id='add-experience' onClick={this.showForm}>\n            Add Experience\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExperienceDisplay;\n","import React, { Component } from 'react';\nimport ExperienceForm from './ExperienceForm';\nimport ExperienceDisplay from './ExperienceDisplay';\n\nclass Experience extends Component {\n  constructor() {\n    super();\n    this.state = {\n      records: [\n        {\n          id: '12',\n          employer: 'Employer',\n          from: 'from',\n          until: 'until',\n          duties: [\n            'write you work history here',\n            'Add experience gained',\n            'Achievements',\n            'Add as many of these bullet points as you want!',\n            'Delete these example records with the trash symbol on the right',\n          ],\n        },\n        {\n          id: '35',\n          employer: 'Exampo Plc',\n          from: '2015',\n          until: 'Present',\n          duties: [\n            'Develop web apps with React, JS, HTML',\n            'Lead Quality Team',\n            'Increased web traffic by 354%',\n            'Planned and executed complete overhaul of code base',\n          ],\n        },\n        {\n          id: '36',\n          employer: 'F-rinstance Web',\n          from: '2010',\n          until: '2015',\n          duties: [\n            'Created Web Apps to user specifications',\n            'Designed perfomance enhancement software for company',\n            'Fixed bugs in exsisting web apps',\n          ],\n        },\n      ],\n      selectedJob: {},\n      editActive: false,\n    };\n\n    this.addRecord = this.addRecord.bind(this);\n    this.removeRecord = this.removeRecord.bind(this);\n    this.requestEdit = this.requestEdit.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n  }\n\n  addRecord(formData) {\n    if (formData.duty !== '') {\n      formData.duties.push(formData.duty);\n      formData.duty = '';\n    }\n    const recordToEdit = this.state.records.find(\n      (record) => record.id === formData.id\n    );\n    if (recordToEdit) {\n      this.setState((prevState) => ({\n        records: prevState.records.map((record) =>\n          record.id === formData.id ? formData : record\n        ),\n        selectedJob: {},\n      }));\n    } else {\n      this.setState((prevState) => {\n        return {\n          records: [...prevState.records, formData],\n        };\n      });\n    }\n  }\n\n  removeRecord(id) {\n    const newArray = [...this.state.records];\n    const filteredArray = newArray.filter((item) => item.id !== id);\n    this.setState({ records: filteredArray });\n  }\n\n  requestEdit(id) {\n    const newJob = this.state.records.find((record) => record.id === id);\n\n    this.setState({\n      selectedJob: newJob,\n      editActive: true,\n    });\n  }\n\n  cancelEdit() {\n    this.setState({ editActive: false });\n  }\n\n  render() {\n    return (\n      <div className='multi-container experience'>\n        <ExperienceForm\n          submitForm={this.addRecord}\n          editData={this.state}\n          editDone={this.cancelEdit}\n        />\n        <ExperienceDisplay\n          data={this.state.records}\n          removeRecord={this.removeRecord}\n          requestEdit={this.requestEdit}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Experience;\n","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\n\nclass SkillsForm extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: uniqid(),\n      text: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.hideForm = this.hideForm.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.editData.editActive) {\n      const { id, text } = this.props.editData.selectedRecord;\n      this.setState({\n        id: id,\n        text: text,\n      });\n      this.props.editDone();\n    }\n  }\n\n  hideForm() {\n    document.getElementById('skills-form').style.width = '0';\n    document.getElementById('skills-display').style.marginLeft = '0';\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.submitForm(this.state);\n    this.setState({\n      id: uniqid(),\n      text: '',\n    });\n  }\n\n  render() {\n    return (\n      <div className=' form-box' id='skills-form'>\n        <div className='title'>\n          <h2>Skills</h2>\n          <div className='close-box' onClick={this.hideForm}>\n            X\n          </div>\n        </div>\n\n        <form onSubmit={this.handleSubmit}>\n          <div className='form-section'>\n            <label>Add Skill:</label>\n            <input\n              type='text'\n              required\n              name='text'\n              value={this.state.text}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className='form-section'>\n            <label htmlFor=''></label>\n            <button type='submit'>submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SkillsForm;\n","import React, { Component } from 'react';\nimport { FaTrashAlt, FaRegEdit } from 'react-icons/fa';\n\nclass SkillsDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.editInfo = this.editInfo.bind(this);\n    this.showForm = this.showForm.bind(this);\n    this.deleteRecord = this.deleteRecord.bind(this);\n    this.editRecord = this.editRecord.bind(this);\n  }\n\n  showForm() {\n    document.getElementById('skills-form').style.width = '400px';\n    document.getElementById('skills-display').style.marginLeft = '400px';\n  }\n  editInfo() {}\n\n  deleteRecord(e) {\n    let confirmation = window.confirm(\n      'Are you sure you want to delete this record?'\n    );\n\n    if (confirmation) {\n      this.props.removeRecord(e.target.dataset.id);\n    }\n  }\n\n  editRecord(e) {\n    this.props.requestEdit(e.target.dataset.id);\n    this.showForm();\n  }\n\n  render() {\n    const listItems = this.props.data.map((item) => (\n      <div className='skill-item' key={item.id}>\n        <div className='skill-item-container'>\n          <p>{item.text}</p>\n        </div>\n        <div className='buttons-div'>\n          <div onClick={this.editRecord} data-id={item.id} className='edit-div'>\n            <FaRegEdit pointerEvents='none' />\n          </div>\n          <div onClick={this.deleteRecord} data-id={item.id} className='delete'>\n            <FaTrashAlt pointerEvents='none' />\n          </div>\n        </div>\n      </div>\n    ));\n    return (\n      <div className='display-box' id='skills-display'>\n        <div className='content-div'>\n          <h2>Skills</h2>\n          <div>{listItems}</div>\n          <button id='add-skill' onClick={this.showForm}>\n            Add Skill\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SkillsDisplay;\n","import React, { Component } from 'react';\nimport SkillsForm from './SkillsForm';\nimport SkillsDisplay from './SkillsDisplay';\n\nclass Skills extends Component {\n  constructor() {\n    super();\n    this.selectedRecord = {};\n    this.state = {\n      records: [\n        {\n          id: '334',\n          text: 'Add as many skills or interests as you like',\n        },\n\n        {\n          id: '345',\n          text:\n            'Technical Skills: HTML5, CSS3, Git, Heroku, JavaScript, SQL, Linux, Mac, React, Angular, Node, Rails, Ruby.',\n        },\n        {\n          id: '344',\n          text: 'Fluent German and French',\n        },\n      ],\n      selectedRecord: {},\n      editActive: false,\n    };\n\n    this.addRecord = this.addRecord.bind(this);\n    this.removeRecord = this.removeRecord.bind(this);\n    this.requestEdit = this.requestEdit.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n  }\n\n  addRecord(formData) {\n    const recordToEdit = this.state.records.find(\n      (record) => record.id === formData.id\n    );\n\n    if (recordToEdit) {\n      this.setState((prevState) => ({\n        records: prevState.records.map((record) =>\n          record.id === formData.id ? formData : record\n        ),\n        selectedRecord: {},\n      }));\n    } else {\n      this.setState((prevState) => {\n        return {\n          records: [...prevState.records, formData],\n        };\n      });\n    }\n  }\n\n  requestEdit(id) {\n    const newRecord = this.state.records.find((record) => record.id === id);\n\n    this.setState({\n      selectedRecord: newRecord,\n      editActive: true,\n    });\n  }\n\n  removeRecord(id) {\n    const newArray = [...this.state.records];\n    const filteredArray = newArray.filter((item) => item.id !== id);\n    this.setState({ records: filteredArray });\n  }\n\n  cancelEdit() {\n    this.setState({ editActive: false });\n  }\n\n  render() {\n    return (\n      <div className='multi-container'>\n        <SkillsForm\n          submitForm={this.addRecord}\n          editData={this.state}\n          editDone={this.cancelEdit}\n        />\n        <SkillsDisplay\n          data={this.state.records}\n          removeRecord={this.removeRecord}\n          requestEdit={this.requestEdit}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Skills;\n","import React, { Component } from 'react';\nimport Personal from './components/personal/Personal';\nimport Summary from './components/summary/Summary';\nimport Education from './components/education/Education';\nimport Experience from './components/experience/Experience';\nimport Skills from './components/skills/Skills';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      personal: {},\n      education: {},\n    };\n  }\n\n  render() {\n    return (\n      <div className='cv-container'>\n        <Personal />\n        <Summary />\n        <Education />\n        <Experience />\n        <Skills />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}